interface FullColorPalette {
    readonly white: string;
    readonly shade10: string;
    readonly shade20: string;
    readonly shade30: string;
    readonly shade40: string;
    readonly shade50: string;
    readonly shade60: string;
    readonly shade70: string;
    readonly shade80: string;
    readonly shade90: string;
    readonly black: string;
}
export interface PaletteColor {
    readonly shade10: string;
    readonly shade20: string;
    readonly shade30: string;
    readonly shade40: string;
    readonly shade50: string;
}
export interface AlphasPalette {
    readonly transparent: string;
    readonly gray10: string;
    readonly gray20: string;
    readonly gray90: string;
    readonly black10: string;
    readonly black20: string;
    readonly black30: string;
    readonly black40: string;
    readonly black50: string;
    readonly black60: string;
    readonly white10: string;
    readonly white20: string;
    readonly white30: string;
    readonly white40: string;
    readonly white50: string;
    readonly white60: string;
}
declare type Palette = {
    readonly [T in PaletteColorsEnum]: PaletteColor;
};
export declare enum PaletteColorsEnum {
    GREY = "grey",
    PINK = "pink",
    RED = "red",
    ORANGE = "orange",
    YELLOW = "yellow",
    GREEN = "green",
    TEAL = "teal",
    BLUE = "blue",
    PURPLE = "purple"
}
export declare const greys: Readonly<FullColorPalette>;
export declare const alphas: Readonly<AlphasPalette>;
export declare const palette: Palette;
export {};
