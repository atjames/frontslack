import React, { FC } from 'react';
interface TooltipCondition {
    type: 'overflow' | 'explicit';
}
interface TooltipOverflowCondition extends TooltipCondition {
    type: 'overflow';
}
interface TooltipExplicitCondition extends TooltipCondition {
    type: 'explicit';
    isEnabled: boolean;
}
declare type TooltipAvailableConditions = TooltipOverflowCondition | TooltipExplicitCondition;
interface TooltipCoordinatorProps {
    /** Children that is wrapped by the tooltip coordinator. */
    children: React.ReactNode;
    /** Tooltip to be rendered. */
    renderTooltip: () => React.ReactNode;
    /** Delay in ms before the tooltip appears. */
    delay?: number;
    /** Conditions that the tooltip would need to pass to be displayed. */
    condition?: TooltipAvailableConditions;
}
export declare const TooltipCoordinator: FC<TooltipCoordinatorProps>;
export {};
