import { FocusEventHandler } from 'react';
import { IconName } from '../icon/icon';
interface InputProps<T> {
    /** The id of the input field */
    id?: string;
    /** The content of the input field */
    value?: T;
    /** Type of input: number, text, email, url, password. Default to text. */
    type?: 'text' | 'email' | 'password' | 'url' | 'number';
    /** The name of the input field */
    name?: string;
    /** Placeholder value */
    placeholder?: string;
    /** Whether the input is disabled */
    isDisabled?: boolean;
    /** The icon to render at the beginning of the input field */
    iconName?: IconName;
    /** Whether the input is erred */
    isErred?: boolean;
    /** Whether we should focus on the input when it is mounted */
    shouldFocus?: boolean;
    /** Max width of the input. Default is 100%. */
    maxWidth?: number;
    /** The handler for when the content of the input field changes */
    onChange?: (value: T) => void;
    /** The handler for when the input field is unfocused */
    onBlur?: FocusEventHandler;
    /** The handler for when the input field is focused */
    onFocus?: FocusEventHandler;
}
export declare function Input<T = string>(props: InputProps<T>): JSX.Element;
export {};
