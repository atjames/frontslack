{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atjam\\\\OneDrive\\\\Documents\\\\GitHub\\\\frontslack\\\\Front\\\\my-app\\\\src\\\\components\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = _ref => {\n  _s();\n  let {\n    onEmojiSelect\n  } = _ref;\n  const [showPicker, setShowPicker] = useState(false);\n  const handleEmojiSelect = (event, emojiObject) => {\n    onEmojiSelect(emojiObject.emoji);\n    setShowPicker(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showPicker && /*#__PURE__*/_jsxDEV(Picker, {\n      onEmojiClick: handleEmojiSelect,\n      disableAutoFocus: true,\n      groupNames: {\n        smileys_people: 'Smileys & People'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowPicker(!showPicker),\n      children: \"Select Emoji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_s(EmojiPicker, \"PcDCImg70lXrYgxmpw3ewp/jgFc=\");\n_c = EmojiPicker;\nexport default EmojiPicker;\n/*#__PURE__*/_jsxDEV(Picker, {\n  data: data,\n  onEmojiSelect: handleEmojiSelect\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 1\n}, this);\nvar _c;\n$RefreshReg$(_c, \"EmojiPicker\");","map":{"version":3,"names":["useState","data","Picker","jsxDEV","_jsxDEV","EmojiPicker","_ref","_s","onEmojiSelect","showPicker","setShowPicker","handleEmojiSelect","event","emojiObject","emoji","children","onEmojiClick","disableAutoFocus","groupNames","smileys_people","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/atjam/OneDrive/Documents/GitHub/frontslack/Front/my-app/src/components/EmojiPicker.js"],"sourcesContent":["import { useState } from 'react';\r\nimport data from '@emoji-mart/data'\r\nimport Picker from '@emoji-mart/react'\r\n\r\nconst EmojiPicker = ({ onEmojiSelect }) => {\r\n    const [showPicker, setShowPicker] = useState(false);\r\n  \r\n    const handleEmojiSelect = (event, emojiObject) => {\r\n      onEmojiSelect(emojiObject.emoji);\r\n      setShowPicker(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        {showPicker && (\r\n          <Picker\r\n            onEmojiClick={handleEmojiSelect}\r\n            disableAutoFocus={true}\r\n            groupNames={{ smileys_people: 'Smileys & People' }}\r\n          />\r\n        )}\r\n        <button onClick={() => setShowPicker(!showPicker)}>Select Emoji</button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default EmojiPicker;\r\n\r\n\r\n\r\n\r\n\r\n<Picker data={data} onEmojiSelect={handleEmojiSelect} />"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAClC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAAK;IAChDL,aAAa,CAACK,WAAW,CAACC,KAAK,CAAC;IAChCJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,GACGN,UAAU,iBACTL,OAAA,CAACF,MAAM;MACLc,YAAY,EAAEL,iBAAkB;MAChCM,gBAAgB,EAAE,IAAK;MACvBC,UAAU,EAAE;QAAEC,cAAc,EAAE;MAAmB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtD,eACDnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMd,aAAa,CAAC,CAACD,UAAU,CAAE;MAAAM,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpE;AAEV,CAAC;AAAChB,EAAA,CApBEF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAsBf,eAAeA,WAAW;AAM5B,aAAAD,OAAA,CAACF,MAAM;EAACD,IAAI,EAAEA,IAAK;EAACO,aAAa,EAAEG;AAAkB;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}