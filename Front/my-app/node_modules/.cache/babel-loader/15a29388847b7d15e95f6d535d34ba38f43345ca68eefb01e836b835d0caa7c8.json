{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atjam\\\\OneDrive\\\\Desktop\\\\Front\\\\my-app\\\\src\\\\components\\\\EmojiPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiSelector = () => {\n  _s();\n  // Define the list of emojis\n  const emojis = ['😀', '😄', '😍', '🚀', '🎉'];\n\n  // State to keep track of the selected emoji\n  const [selectedEmoji, setSelectedEmoji] = useState(null);\n\n  // Event handler for emoji selection\n  const handleEmojiSelection = emoji => {\n    setSelectedEmoji(emoji);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emoji Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEmojiSelection(emoji),\n        style: {\n          fontSize: '24px',\n          margin: '5px'\n        },\n        children: emoji\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedEmoji && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You have selected: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '48px'\n          },\n          children: selectedEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(EmojiSelector, \"bA8jDeI1WqHe2mvrjQV66nYBaCU=\");\n_c = EmojiSelector;\nexport default EmojiSelector;\nvar _c;\n$RefreshReg$(_c, \"EmojiSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmojiSelector","_s","emojis","selectedEmoji","setSelectedEmoji","handleEmojiSelection","emoji","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","fontSize","margin","_c","$RefreshReg$"],"sources":["C:/Users/atjam/OneDrive/Desktop/Front/my-app/src/components/EmojiPicker.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst EmojiSelector = () => {\r\n  // Define the list of emojis\r\n  const emojis = ['😀', '😄', '😍', '🚀', '🎉'];\r\n\r\n  // State to keep track of the selected emoji\r\n  const [selectedEmoji, setSelectedEmoji] = useState(null);\r\n\r\n  // Event handler for emoji selection\r\n  const handleEmojiSelection = (emoji) => {\r\n    setSelectedEmoji(emoji);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Emoji Selector</h1>\r\n      <div>\r\n        {emojis.map((emoji, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleEmojiSelection(emoji)}\r\n            style={{ fontSize: '24px', margin: '5px' }}\r\n          >\r\n            {emoji}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        {selectedEmoji && (\r\n          <h2>\r\n            You have selected: <span style={{ fontSize: '48px' }}>{selectedEmoji}</span>\r\n          </h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmojiSelector;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;EAE7C;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMQ,oBAAoB,GAAIC,KAAK,IAAK;IACtCF,gBAAgB,CAACE,KAAK,CAAC;EACzB,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBZ,OAAA;MAAAQ,QAAA,EACGL,MAAM,CAACU,GAAG,CAAC,CAACN,KAAK,EAAEO,KAAK,kBACvBd,OAAA;QAEEe,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACC,KAAK,CAAE;QAC3CS,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAM,CAAE;QAAAV,QAAA,EAE1CD;MAAK,GAJDO,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNZ,OAAA;MAAAQ,QAAA,EACGJ,aAAa,iBACZJ,OAAA;QAAAQ,QAAA,GAAI,qBACiB,eAAAR,OAAA;UAAMgB,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAT,QAAA,EAAEJ;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAE/E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACV,EAAA,CAnCID,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}