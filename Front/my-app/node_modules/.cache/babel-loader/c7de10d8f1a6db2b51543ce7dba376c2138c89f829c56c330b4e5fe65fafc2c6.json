{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atjam\\\\OneDrive\\\\Desktop\\\\Front\\\\my-app\\\\src\\\\components\\\\Tutorial.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useFrontContext } from '../providers/frontContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tutorial() {\n  _s();\n  const context = useFrontContext();\n  const [color, setColor] = useState('red');\n  const [disabled, setDisabled] = useState(false);\n  const [emojiCode, setEmojiCode] = useState('');\n  const [slackStatus, setSlackStatus] = useState('');\n  const [frontStatusCheck, setFrontStatusCheck] = useState(false);\n  const frontuserID = context.teammate.id;\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setColor('red');\n      setDisabled(false);\n    }, 4000);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [color, disabled]);\n  const handleClick = async () => {\n    if (disabled) {\n      return;\n    }\n    //const slackPayload = {slack_status:{slackStatusText}};\n    setColor('green');\n    setDisabled(true);\n    const response = await fetch(' https://a387-68-36-121-182.ngrok.io/slackStatus', {\n      method: 'POST',\n      body: JSON.stringify({\n        slack_status: slackStatus,\n        emoji: emojiCode\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      console.error('Failed to post data to webhook.');\n    }\n    const response2 = await fetch(' https://a387-68-36-121-182.ngrok.io/frontStatus', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: frontuserID,\n        front_status: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response2.ok) {\n      console.error('Failed to post data to webhook.');\n    }\n  };\n  const handleEmojiChange = event => {\n    setEmojiCode(event.target.value);\n  };\n  const handleStatusChange = event => {\n    setSlackStatus(event.target.value);\n  };\n  const handleCheckboxChange = event => {\n    setFrontStatusCheck(event.target.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"button-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"textinput\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input\",\n        children: \"Enter Slack Status Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: slackStatus,\n        onChange: handleStatusChange,\n        placeholder: \"Enter Slack status here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input\",\n        children: \"Enter Emoji Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: emojiCode,\n        onChange: handleEmojiChange,\n        placeholder: \"Enter emoji code here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: color\n        },\n        onClick: handleClick,\n        disabled: disabled,\n        children: disabled ? 'Updating Status...' : 'Send Status'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n_s(Tutorial, \"CeBobUk8xxkR1Pj1k63GYvUZQUc=\", false, function () {\n  return [useFrontContext];\n});\n_c = Tutorial;\nexport default Tutorial;\nvar _c;\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"names":["React","useEffect","useState","useFrontContext","jsxDEV","_jsxDEV","Tutorial","_s","context","color","setColor","disabled","setDisabled","emojiCode","setEmojiCode","slackStatus","setSlackStatus","frontStatusCheck","setFrontStatusCheck","frontuserID","teammate","id","timeoutId","setTimeout","clearTimeout","handleClick","response","fetch","method","body","JSON","stringify","slack_status","emoji","headers","ok","console","error","response2","front_status","handleEmojiChange","event","target","value","handleStatusChange","handleCheckboxChange","checked","class","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/atjam/OneDrive/Desktop/Front/my-app/src/components/Tutorial.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport { useFrontContext } from '../providers/frontContext';\r\n\r\nfunction Tutorial() {\r\n\r\n  const context = useFrontContext();\r\n  const [color, setColor] = useState('red');\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [emojiCode,setEmojiCode] = useState('');\r\n  const [slackStatus,setSlackStatus] = useState('');\r\n  const [frontStatusCheck, setFrontStatusCheck] = useState(false);\r\n  const frontuserID = context.teammate.id;\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setColor('red');\r\n      setDisabled(false); \r\n    }, 4000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [color,disabled]);\r\n\r\n\r\n  const handleClick = async () => {\r\n      if(disabled){\r\n        return;\r\n      }\r\n        //const slackPayload = {slack_status:{slackStatusText}};\r\n          setColor('green');\r\n          setDisabled(true); \r\n\r\n          const response = await fetch(' https://a387-68-36-121-182.ngrok.io/slackStatus', {\r\n            method: 'POST',\r\n            body: JSON.stringify({slack_status: slackStatus, emoji: emojiCode}),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          if (!response.ok) {\r\n            console.error('Failed to post data to webhook.');\r\n          }\r\n          \r\n          const response2 = await fetch(' https://a387-68-36-121-182.ngrok.io/frontStatus', {\r\n            method: 'POST',\r\n            body: JSON.stringify({id: frontuserID, front_status: false}),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          if (!response2.ok) {\r\n            console.error('Failed to post data to webhook.');\r\n          }\r\n\r\n  };\r\n\r\n  const handleEmojiChange = event => {\r\n    setEmojiCode(event.target.value);\r\n  };\r\n\r\n  const handleStatusChange = event => {\r\n    setSlackStatus(event.target.value);\r\n  };\r\n\r\n  const handleCheckboxChange = event => {\r\n    setFrontStatusCheck(event.target.checked);\r\n  };\r\n\r\n  return (\r\n      <div class = \"button-container\">\r\n        <div class = \"textinput\">\r\n          <label htmlFor=\"input\">Enter Slack Status Text:</label>\r\n          <input type=\"text\" value={slackStatus} onChange={handleStatusChange} placeholder=\"Enter Slack status here\"/>\r\n          <label htmlFor=\"input\">Enter Emoji Code:</label>\r\n          \r\n          <input type=\"text\" value={emojiCode} onChange={handleEmojiChange} placeholder=\"Enter emoji code here\" />\r\n          <button style={{ backgroundColor: color }} onClick={handleClick} disabled={disabled}>\r\n            {disabled ? 'Updating Status...' : 'Send Status'}\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tutorial;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,SAASC,eAAe,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,OAAO,GAAGL,eAAe,EAAE;EACjC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,SAAS,EAACC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACa,WAAW,EAACC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMiB,WAAW,GAAGX,OAAO,CAACY,QAAQ,CAACC,EAAE;EAEvCpB,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCb,QAAQ,CAAC,KAAK,CAAC;MACfE,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXY,YAAY,CAACF,SAAS,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACb,KAAK,EAACE,QAAQ,CAAC,CAAC;EAGpB,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAGd,QAAQ,EAAC;MACV;IACF;IACE;IACED,QAAQ,CAAC,OAAO,CAAC;IACjBE,WAAW,CAAC,IAAI,CAAC;IAEjB,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;MAC/EC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,YAAY,EAAEjB,WAAW;QAAEkB,KAAK,EAAEpB;MAAS,CAAC,CAAC;MACnEqB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChBC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;IAClD;IAEA,MAAMC,SAAS,GAAG,MAAMX,KAAK,CAAC,kDAAkD,EAAE;MAChFC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV,EAAE,EAAEF,WAAW;QAAEoB,YAAY,EAAE;MAAK,CAAC,CAAC;MAC5DL,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAI,CAACI,SAAS,CAACH,EAAE,EAAE;MACjBC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;IAClD;EAER,CAAC;EAED,MAAMG,iBAAiB,GAAGC,KAAK,IAAI;IACjC3B,YAAY,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,kBAAkB,GAAGH,KAAK,IAAI;IAClCzB,cAAc,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,oBAAoB,GAAGJ,KAAK,IAAI;IACpCvB,mBAAmB,CAACuB,KAAK,CAACC,MAAM,CAACI,OAAO,CAAC;EAC3C,CAAC;EAED,oBACIzC,OAAA;IAAK0C,KAAK,EAAG,kBAAkB;IAAAC,QAAA,eAC7B3C,OAAA;MAAK0C,KAAK,EAAG,WAAW;MAAAC,QAAA,gBACtB3C,OAAA;QAAO4C,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvDhD,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACX,KAAK,EAAE5B,WAAY;QAACwC,QAAQ,EAAEX,kBAAmB;QAACY,WAAW,EAAC;MAAyB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC5GhD,OAAA;QAAO4C,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAEhDhD,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACX,KAAK,EAAE9B,SAAU;QAAC0C,QAAQ,EAAEf,iBAAkB;QAACgB,WAAW,EAAC;MAAuB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxGhD,OAAA;QAAQoD,KAAK,EAAE;UAAEC,eAAe,EAAEjD;QAAM,CAAE;QAACkD,OAAO,EAAElC,WAAY;QAACd,QAAQ,EAAEA,QAAS;QAAAqC,QAAA,EACjFrC,QAAQ,GAAG,oBAAoB,GAAG;MAAa;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAAC9C,EAAA,CAhFQD,QAAQ;EAAA,QAECH,eAAe;AAAA;AAAAyD,EAAA,GAFxBtD,QAAQ;AAkFjB,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}