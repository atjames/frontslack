{"ast":null,"code":"// Inspiration: https://github.com/facebook/react/issues/3386\n\nvar invariant = require('invariant'),\n  isString = require('lodash.isstring'),\n  flatten = require('lodash.flatten');\nfunction replace(string, regexpOrSubstr, newValueOrFn) {\n  invariant(typeof string === 'string', 'First param must be a string');\n  invariant(typeof regexpOrSubstr === 'string' || regexpOrSubstr instanceof RegExp, 'Second param must be a string pattern or a regular expression');\n  var fn = typeof regexpOrSubstr === 'string' ? replaceUsingString : replaceUsingRegexp;\n  return fn(string, regexpOrSubstr, newValueOrFn);\n}\nfunction replaceUsingString(string, patternString, newValueOrFn) {\n  var index = string.indexOf(patternString);\n  if (index >= 0) {\n    var arr = [];\n    var endIndex = index + patternString.length;\n    if (index > 0) {\n      arr.push(string.substring(0, index));\n    }\n    arr.push(typeof newValueOrFn === 'function' ? newValueOrFn(string.substring(index, endIndex), index, string) : newValueOrFn);\n    if (endIndex < string.length) {\n      arr.push(string.substring(endIndex));\n    }\n    return arr;\n  } else {\n    return [string];\n  }\n}\nfunction replaceUsingRegexp(string, regexp, newValueOrFn) {\n  var output = [];\n  var replacerIsFn = typeof newValueOrFn === 'function';\n  var storedLastIndex = regexp.lastIndex;\n  regexp.lastIndex = 0;\n  var result;\n  var lastIndex = 0;\n  while (result = regexp.exec(string)) {\n    var index = result.index;\n    if (result[0] === '') {\n      // When the regexp is an empty string\n      // we still want to advance our cursor to the next item.\n      // This is the behavior of String.replace.\n      regexp.lastIndex++;\n    }\n    if (index !== lastIndex) {\n      output.push(string.substring(lastIndex, index));\n    }\n    var match = result[0];\n    lastIndex = index + match.length;\n    var out = replacerIsFn ? newValueOrFn.apply(this, result.concat(index, result.input)) : newValueOrFn;\n    output.push(out);\n    if (!regexp.global) {\n      break;\n    }\n  }\n  if (lastIndex < string.length) {\n    output.push(string.substring(lastIndex));\n  }\n  regexp.lastIndex = storedLastIndex;\n  return output;\n}\nmodule.exports = function stringReplaceToArray(string, regexpOrSubstr, newSubStrOrFn) {\n  if (isString(string)) {\n    return replace(string, regexpOrSubstr, newSubStrOrFn);\n  } else if (!Array.isArray(string) || !string[0]) {\n    throw new TypeError('First argument must be an array or non-empty string');\n  } else {\n    return flatten(string.map(function (string) {\n      if (!isString(string)) return string;\n      return replace(string, regexpOrSubstr, newSubStrOrFn);\n    }));\n  }\n};","map":{"version":3,"names":["invariant","require","isString","flatten","replace","string","regexpOrSubstr","newValueOrFn","RegExp","fn","replaceUsingString","replaceUsingRegexp","patternString","index","indexOf","arr","endIndex","length","push","substring","regexp","output","replacerIsFn","storedLastIndex","lastIndex","result","exec","match","out","apply","concat","input","global","module","exports","stringReplaceToArray","newSubStrOrFn","Array","isArray","TypeError","map"],"sources":["C:/Users/atjam/OneDrive/Desktop/Front/my-app/node_modules/string-replace-to-array/string-replace-to-array.js"],"sourcesContent":["// Inspiration: https://github.com/facebook/react/issues/3386\n\nvar invariant = require('invariant'),\n\tisString = require('lodash.isstring'),\n\tflatten = require('lodash.flatten')\n\nfunction replace (string, regexpOrSubstr, newValueOrFn) {\n\tinvariant(typeof string === 'string', 'First param must be a string')\n\tinvariant(typeof regexpOrSubstr === 'string' || regexpOrSubstr instanceof RegExp, 'Second param must be a string pattern or a regular expression')\n\n\tvar fn = (typeof regexpOrSubstr === 'string') ? replaceUsingString : replaceUsingRegexp\n\n\treturn fn(string, regexpOrSubstr, newValueOrFn)\n}\n\nfunction replaceUsingString (string, patternString, newValueOrFn) {\n\tvar index = string.indexOf(patternString)\n\n\tif (index >= 0) {\n\t\tvar arr = []\n\t\tvar endIndex = index + patternString.length\n\n\t\tif (index > 0) {\n\t\t\tarr.push(string.substring(0, index))\n\t\t}\n\n\t\tarr.push(\n\t\t\t(typeof newValueOrFn === 'function') ?\n\t\t\t\tnewValueOrFn(\n\t\t\t\t\tstring.substring(index, endIndex),\n\t\t\t\t\tindex,\n\t\t\t\t\tstring\n\t\t\t\t) :\n\t\t\t\tnewValueOrFn\n\t\t)\n\n\t\tif (endIndex < string.length) {\n\t\t\tarr.push(string.substring(endIndex))\n\t\t}\n\n\t\treturn arr\n\t} else {\n\t\treturn [string]\n\t}\n}\n\nfunction replaceUsingRegexp (string, regexp, newValueOrFn) {\n\tvar output = []\n\n\tvar replacerIsFn = (typeof newValueOrFn === 'function')\n\n\tvar storedLastIndex = regexp.lastIndex\n\tregexp.lastIndex = 0\n\n\tvar result\n\tvar lastIndex = 0\n\twhile (result = regexp.exec(string)) {\n\t\tvar index = result.index\n\n\t\tif (result[0] === '') {\n\t\t\t// When the regexp is an empty string\n\t\t\t// we still want to advance our cursor to the next item.\n\t\t\t// This is the behavior of String.replace.\n\t\t\tregexp.lastIndex++\n\t\t}\n\n\t\tif (index !== lastIndex) {\n\t\t\toutput.push(string.substring(lastIndex, index))\n\t\t}\n\n\t\tvar match = result[0]\n\t\tlastIndex = index + match.length\n\t\t\n\t\tvar out = replacerIsFn ?\n\t\t\tnewValueOrFn.apply(this, result.concat(index, result.input)) :\n\t\t\tnewValueOrFn\n\t\toutput.push(out)\n\n\t\tif (!regexp.global) {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (lastIndex < string.length) {\n\t\toutput.push(string.substring(lastIndex))\n\t}\n\n\tregexp.lastIndex = storedLastIndex\n\treturn output\n}\n\nmodule.exports = function stringReplaceToArray (string, regexpOrSubstr, newSubStrOrFn) {\n\tif (isString(string)) {\n\t\treturn replace(string, regexpOrSubstr, newSubStrOrFn)\n\t} else if (!Array.isArray(string) || !string[0]) {\n\t\tthrow new TypeError('First argument must be an array or non-empty string');\n\t} else {\n\t\treturn flatten(string.map(function (string) {\n\t\t\tif (!isString(string)) return string\n\t\t\treturn replace(string, regexpOrSubstr, newSubStrOrFn)\n\t\t}))\n\t}\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}